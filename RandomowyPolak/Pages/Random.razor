@page "/"
@using RandomowyPolak.Services
@using RandomPersonalDataGenerator
@inject IRandomPersonService RandomPersonService

<head>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@700&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <style>
        .header {
            text-align: center;
            margin: 20px 0;
        }

        .logo {
            font-family: 'Roboto', sans-serif;
            font-size: 5em;
            background: linear-gradient(90deg, #4B0082, #000080);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .custom-table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
            font-size: 18px;
            text-align: left;
        }

            .custom-table thead th {
                background-color: #4CAF50;
                color: white;
                padding: 10px;
                border: 1px solid #ddd;
            }

            .custom-table tbody td {
                padding: 10px;
                border: 1px solid #ddd;
            }

            .custom-table tbody tr:nth-child(even) {
                background-color: #f2f2f2;
            }

            .custom-table tbody tr:hover {
                background-color: #ddd;
            }

        .fade-in {
            opacity: 0;
            transform: translateY(-20px);
            transition: opacity 0.5s ease, transform 0.5s ease;
        }

            .fade-in.show {
                opacity: 1;
                transform: translateY(0);
            }
    </style>
</head>

<body>
    <div class="container">
        <h3 class="header logo">Randomowy Polak</h3>

        <div class="mb-3">
            <label for="count" class="form-label">Number of people to generate:</label>
            <input type="number" @bind="peopleCount" id="count" min="1" class="form-control" />
        </div>

        <div class="mb-3">
            <h4>Select data to display:</h4>
            <div>
                <label class="form-check-label">
                    <input type="checkbox" @bind="includeName" class="form-check-input" />
                    Name
                </label>
            </div>
            <div>
                <label class="form-check-label">
                    <input type="checkbox" @bind="includePhoneNumber" class="form-check-input" />
                    Phone number
                </label>
            </div>
            <div>
                <label class="form-check-label">
                    <input type="checkbox" @bind="includeBirthDay" class="form-check-input" />
                    Birth day
                </label>
            </div>
            <div>
                <label class="form-check-label">
                    <input type="checkbox" @bind="includePesel" class="form-check-input" />
                    PESEL
                </label>
            </div>
            <div>
                <label class="form-check-label">
                    <input type="checkbox" @bind="includeAddress" class="form-check-input" />
                    Address
                </label>
            </div>
        </div>

        <button class="btn btn-primary" @onclick="GenerateRandomPeople">Generate</button>

        <br />

        @if (generatedPeople != null && generatedPeople.Count > 0)
        {
            <br />
            <h4>Generated people:</h4>
            <table class="table table-striped custom-table">
                <thead>
                    <tr>
                        @if (includeName)
                        {
                            <th>Name</th>
                        }
                        @if (includePhoneNumber)
                        {
                            <th>Phone number</th>
                        }
                        @if (includeBirthDay)
                        {
                            <th>Birth day</th>
                        }
                        @if (includePesel)
                        {
                            <th>PESEL</th>
                        }
                        @if (includeAddress)
                        {
                            <th>Address</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach (var person in generatedPeople)
                    {
                        <tr class="fade-in show">
                            @if (includeName)
                            {
                                <td>@person.Name</td>
                            }
                            @if (includePhoneNumber)
                            {
                                <td>@person.PhoneNumber</td>
                            }
                            @if (includeBirthDay)
                            {
                                <td>@person.BirthDay</td>
                            }
                            @if (includePesel)
                            {
                                <td>@person.PESEL</td>
                            }
                            @if (includeAddress)
                            {
                                <td>@person.Address</td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>No people have been generated yet.</p>
        }
    </div>
</body>

@code {
    private int peopleCount = 1;
    private List<RandomPersonalDataGenerator.RandomPerson> generatedPeople = new List<RandomPersonalDataGenerator.RandomPerson>();

    private bool includeName = true;
    private bool includePhoneNumber = true;
    private bool includeBirthDay = true;
    private bool includePesel = true;
    private bool includeAddress = true;

    private async Task GenerateRandomPeople()
    {
        generatedPeople.Clear(); // Czyść poprzednie dane

        for (int i = 0; i < peopleCount; i++)
        {
            var person = await RandomPersonService.GenerateRandomPerson();
            generatedPeople.Add(person);

            StateHasChanged(); // Odśwież komponent
        }
    }
}
