@page "/"
@using RandomowyPolak.Services
@using RandomPersonalDataGenerator
@inject IRandomPersonService RandomPersonService

<head>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@700&display=swap" rel="stylesheet">
</head>

<h3 class="header logo">Randomowy Polak</h3>

<div>
    <label for="count">Number of people to generate:</label>
    <input type="number" @bind="peopleCount" id="count" min="1" />
</div>

<button class="btn btn-primary" @onclick="GenerateRandomPeople">Generate</button>

<br />

@if (generatedPeople != null && generatedPeople.Count > 0)
{
    <br />
    <h4>Generated people:</h4>
    <table class="custom-table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Phone number</th>
                <th>Birth day</th>
                <th>PESEL</th>
                <th>Address</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var person in generatedPeople)
            {
                <tr class="fade-in show">
                    <td>@person.Name</td>
                    <td>@person.PhoneNumber</td>
                    <td>@person.BirthDay</td>
                    <td>@person.PESEL</td>
                    <td>@person.Address</td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No people have been generated yet.</p>
}

<style>
        .header {
            text-align: center;
            margin: 20px 0;
        }

        .logo {
            font-family: 'Roboto', sans-serif;
            font-size: 5em;
            background: linear-gradient(90deg, #4B0082, #000080);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .custom-table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
            font-size: 18px;
            text-align: left;
        }

        .custom-table thead th {
            background-color: #4CAF50;
            color: white;
            padding: 10px;
            border: 1px solid #ddd;
        }

        .custom-table tbody td {
            padding: 10px;
            border: 1px solid #ddd;
        }

        .custom-table tbody tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        .custom-table tbody tr:hover {
            background-color: #ddd;
        }

        .fade-in {
            opacity: 0;
            transform: translateY(-20px);
            transition: opacity 0.5s ease, transform 0.5s ease;
        }

        .fade-in.show {
             opacity: 1;
             transform: translateY(0);
         }
</style>

@code {
    private int peopleCount = 1;
    private List<RandomPersonalDataGenerator.RandomPerson> generatedPeople = new List<RandomPersonalDataGenerator.RandomPerson>();

    private async Task GenerateRandomPeople()
    {
        generatedPeople.Clear(); // Czyść poprzednie dane

        for (int i = 0; i < peopleCount; i++)
        {
            var person = await RandomPersonService.GenerateRandomPerson();
            generatedPeople.Add(person);

            StateHasChanged(); // Odśwież komponent
            await Task.Delay(500); // Opóźnienie przed dodaniem kolejnej osoby
        }
    }
}